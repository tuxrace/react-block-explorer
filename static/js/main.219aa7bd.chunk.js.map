{"version":3,"sources":["types.ts","components/Header/styles.ts","components/Header/index.tsx","components/SearchBar/styles.ts","components/SearchBar/index.tsx","components/DetailsCard/index.tsx","components/ToggleComponent/styles.ts","config.ts","components/ToggleComponent/index.tsx","contractsService.ts","components/BarChartComponent/index.tsx","containers/Main/styles.ts","helpers.ts","components/DialogComponent/index.tsx","containers/Main/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CoinTypes","styles","container","display","header","backgroundColor","padding","Header","classes","makeStyles","useStyles","AppBar","position","className","Typography","variant","searchStyle","width","paddingBottom","SearchBar","props","handleSearch","useState","searchStr","setSearchStr","TextField","label","id","onChange","event","target","value","InputProps","endAdornment","InputAdornment","onClick","DetailsCard","loading","contract","Grid","item","CircularProgress","size","symbol","name","owner","total_tokens","decimals","toggleStyle","marginBottom","tokenMap","Alice","Bob","ToggleComponent","handleChange","selected","ToggleButtonGroup","exclusive","ToggleButton","getContracts","params","a","axios","post","jsonrpc","res","data","BarChartComponent","setData","getData","useCallback","method","result","balances","convertedData","Object","keys","map","key","hash","balance","useEffect","x","y","marginTop","detailsCardStyle","border","borderRadius","barChartStyle","convertResults","arr","reduce","acc","cur","vname","DialogComponent","open","onClose","title","content","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","color","autoFocus","useStyle","Main","setContract","setLoading","setOpen","token","setToken","error","Container","md","xs","substring","convertStr","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.219aa7bd.chunk.js","sourcesContent":["export type RpcParams = {\n    id?: string;\n    jsonrpc?: string;\n    method?: string;\n    params?: any;\n}\n\nexport type ResultsParams = {\n    type?: string;\n    value?: string;\n    vname: string | number;\n}\n\nexport enum CoinTypes {\n    Alice = 'AliceCoin',\n    Bob = 'BobCoin',\n    Doge = 'Doge'\n}","const styles = {\n    container: {\n        display: 'flex'\n    },\n    header: {\n        backgroundColor: '#131D32',\n        padding: 24\n    }\n}\n\nexport default styles\n","import React from 'react'\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport { colors, makeStyles } from '@material-ui/core';\nimport styles from './styles';\n\n\n\nconst Header = () => {\n    const useStyles = makeStyles(styles)\n    const classes = useStyles()\n    return <AppBar position=\"static\" className={classes.header}>\n    <Typography variant=\"h6\">\n        {`🛡️`} Clever Block Explorer\n      </Typography>\n  </AppBar>\n}\n\nexport default Header\n","const styles = {\n    searchStyle: {\n        width: '100%', paddingBottom: 16\n    }\n}\n\nexport default styles\n","import React from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { makeStyles } from '@material-ui/core';\nimport styles from './styles';\nimport { useState } from 'react';\n\ninterface Props {\n  handleSearch: (val: any) => void\n}\n\nconst useStyles = makeStyles(styles)\n\nconst SearchBar = (props: Props) => {\n    const {handleSearch} = props\n    const [searchStr, setSearchStr] = useState() as any\n    const classes = useStyles()\n\n    const onSearch = () => {\n      handleSearch(searchStr)\n    }\n\n    const handleInputChange = (event: any) => {\n      setSearchStr(event?.target.value)\n    }\n\n    return <TextField\n    label=\"transaction address\"\n    id=\"standard-start-adornment\"\n    variant=\"outlined\"\n    onChange={handleInputChange}\n    className={classes.searchStyle}\n    InputProps={{\n      endAdornment: <InputAdornment position=\"end\" onClick={onSearch}>{`🔎`}</InputAdornment>,\n    }}\n  />\n}\n\nexport default SearchBar\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\n\ninterface Props {\n  loading: boolean;\n  contract: any;\n}\n\nconst DetailsCard = (props: Props) => {\n    const {loading, contract} = props\n    return <>\n      {loading ? <Grid item><CircularProgress size={24} /></Grid>: \n                    <Grid item>\n                        <Typography variant=\"h6\">{contract?.symbol?.value}</Typography> \n                        <Typography variant=\"body1\">Name: {contract?.name?.value}</Typography> \n                        <Typography variant=\"caption\">{contract?.owner?.value}</Typography>\n                        <Typography variant=\"body1\">Total Tokens: {contract?.total_tokens?.value}</Typography> \n                        <Typography variant=\"body1\">Decimals: {contract?.decimals?.value}</Typography> \n                    </Grid>}\n    </>\n}\n\nexport default DetailsCard\n","const styles = {\n    toggleStyle: {\n        marginBottom: 16\n    }\n}\n\nexport default styles\n","import { CoinTypes } from \"./types\"\n\nexport const API_URL ='https://dev-api.zilliqa.com/'\n\nexport const tokenMap = {\n    [CoinTypes.Alice]: '5938fc8af82250ad6cf1da3bb92f4aa005cb2717',\n    [CoinTypes.Bob]: 'acfbdcf4693b1780e474116211f7f4795f24e06a'\n}","import React, {useState} from 'react'\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport { Grid, makeStyles } from '@material-ui/core';\nimport styles from './styles';\nimport { CoinTypes } from '../../types';\nimport { tokenMap } from '../../config';\n\nconst ToggleComponent = (props: any) => {\n    const {handleChange, selected} = props\n    const useStyles = makeStyles(styles)\n    const classes = useStyles()\n    \n    return <ToggleButtonGroup exclusive value={selected} onChange={handleChange} className={classes.toggleStyle}>\n        <ToggleButton value={tokenMap[CoinTypes.Alice]}> {CoinTypes.Alice} </ToggleButton>\n        <ToggleButton value={tokenMap[CoinTypes.Bob]}> {CoinTypes.Bob} </ToggleButton>\n      </ToggleButtonGroup>\n      \n}\n\nexport default ToggleComponent\n","import axios from \"axios\"\nimport { API_URL } from \"./config\"\nimport { RpcParams } from \"./types\"\n\nexport const getContracts = async (params: RpcParams) => {\n    const res = await axios.post(API_URL, {\n        id: '1',\n        jsonrpc: '2.0',\n        ...params\n    })\n    \n    return res?.data\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React from 'react'\nimport { useEffect, useCallback, useState } from 'react';\nimport {VictoryBar} from 'victory'\nimport { getContracts } from '../../contractsService';\n\ninterface Props {\n  selected: string\n}\n\nconst BarChartComponent = (props: Props) => {\n  const { selected } = props\n  const [data, setData] = useState<any>()\n  \n  const getData = useCallback(async () => {\n    const res = await getContracts({method: 'GetSmartContractState', params:[selected]})\n    if (res?.result) {\n      const balances = res?.result?.balances\n      const convertedData = Object.keys(balances).map(key => {\n        return {\n          hash: key,\n          balance: balances[key]\n        }\n      })\n      setData(convertedData)\n    }\n  }, [selected])\n\n    useEffect(() => {\n      getData()\n    }, [selected])\n    \n    return <>\n      <VictoryBar data={data} x=\"hash\" y=\"balance\" />\n    </>\n}\n\nexport default BarChartComponent\n","const styles = {\n    container: {\n        padding: 24,\n        marginTop: 24\n    },\n    detailsCardStyle: {\n        border: '1px solid lightgrey', borderRadius: 6, padding: 16\n    },\n    barChartStyle: {\n        border: '1px solid lightgrey', borderRadius: 6, padding: 16, marginTop: 16\n    }\n}\n\nexport default styles\n","import { ResultsParams } from \"./types\"\n\nexport const convertResults = (arr: ResultsParams[]) => {\n    return arr.reduce((acc: any, cur: ResultsParams) => {\n        if (!arr[cur?.vname as any]){\n            acc[cur?.vname] = cur\n        }\n        return acc\n    }, {})\n}\n\nexport const convertStr = (value: string) => {\n    if (value.substring(0, 2) === '0x'){\n        return value.substring(2)\n    }\n    return value\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport React from 'react'\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\ninterface Props {\n  open: boolean\n  onClose: () => void\n  title: string\n  content: string\n}\n\nconst DialogComponent = (props: Props) => {\n  const { open, onClose, title, content } = props\n  \n    return <Dialog\n    open={open}\n    onClose={onClose}\n  >\n    <DialogTitle>{title}</DialogTitle>\n    <DialogContent>\n      <DialogContentText>\n        {content}\n      </DialogContentText>\n    </DialogContent>\n    <DialogActions>\n      <Button onClick={onClose} color=\"primary\" autoFocus>\n        Please try Again\n      </Button>\n    </DialogActions>\n  </Dialog>\n}\n\nexport default DialogComponent\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState, useCallback } from 'react'\nimport Header from '../../components/Header'\nimport SearchBar from '../../components/SearchBar'\nimport DetailsCard from '../../components/DetailsCard'\nimport ToggleComponent from '../../components/ToggleComponent'\nimport BarChartComponent from '../../components/BarChartComponent'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport styles from './styles'\nimport { makeStyles, Typography } from '@material-ui/core'\nimport { getContracts } from '../../contractsService'\nimport { convertResults, convertStr } from '../../helpers'\nimport { tokenMap } from '../../config'\nimport { CoinTypes } from '../../types'\nimport DialogComponent from '../../components/DialogComponent'\n\nconst useStyle = makeStyles(styles)\n\nconst Main = () => {\n    const [contract, setContract] = useState({} as any)\n    const [loading, setLoading] = useState({} as any)\n    const [open, setOpen] = useState(false)\n    const [token, setToken] = useState<string>(tokenMap[CoinTypes.Alice])\n    const classes = useStyle()\n    \n    const getData = useCallback(async () => {\n        setLoading(true)\n        const res = await getContracts({\n            method: 'GetSmartContractInit',\n            params: [token]\n        })\n\n        if (res?.error){\n            setOpen(true)\n            setLoading(false)\n        }\n\n        if (res?.result) {\n            setLoading(false)\n            setContract(convertResults(res?.result))\n        }\n    }, [token])\n\n    useEffect(() => {\n        getData()\n    }, [token])\n        \n    const handleChange = (event: any, value: string) => {\n        setToken(value)\n    }\n\n    const handleSearch = (value: string) => {\n        setToken(convertStr(value))\n    }\n\n    const onModalClose = () => {\n        setOpen(false)\n    }\n\n    return (\n        <>\n            <Header />\n            <Container className={classes.container}>\n                <Grid md={10} xs={12}>\n                    <SearchBar handleSearch={handleSearch} />\n                </Grid>\n                <Grid md={12}>\n                    <ToggleComponent selected={token} handleChange={handleChange}/>\n                </Grid>\n                <Grid container md={10} xs={12} className={classes.detailsCardStyle}>\n                    <DetailsCard loading={loading} contract={contract} />\n                </Grid>\n                <Grid container md={10} xs={12} className={classes.barChartStyle}>\n                    <BarChartComponent selected={token}/>\n                </Grid>\n                <DialogComponent \n                    open={open}\n                    onClose={onModalClose}\n                    title=\"Invalid Address\"\n                    content=\"The transaction address that you have entered on the address bar is somehow invalid. Please try again.\"\n                />\n            </Container>\n        </>\n    )\n}\n\nexport default Main\n","import React from 'react';\nimport './App.css';\nimport Main from './containers/Main';\n\nfunction App() {\n  return <Main />;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}